{"version":3,"sources":["Components/Home/Home.jsx","Components/Quiz/Quiz.jsx","App.jsx","index.js"],"names":["HomePage","topics","setTopics","useState","useEffect","async","response","fetch","data","json","error","console","fetchTopics","_jsxs","className","children","_jsx","map","topic","index","concat","name","href","Quiz","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","lock","setLock","score","setScore","result","setResult","Option1","useRef","Option2","Option3","Option4","optionArray","axios","get","params","limit","log","fetchQuestions","currentQuestion","checkAns","e","currect_ans","correctOption","target","classList","add","prev","current","style","textAlign","_Fragment","length","onClick","reset","title","ref","option_1","option_2","option_3","option_4","next","prevIndex","forEach","option","remove","App","Router","Routes","Route","path","element","Home","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.e863b936.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction HomePage() {\r\n  const [topics, setTopics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the topics from an API or any other data source\r\n    const fetchTopics = async () => {\r\n      try {\r\n        const response = await fetch('/api/topics');\r\n        const data = await response.json();\r\n        setTopics(data);\r\n      } catch (error) {\r\n        console.error('Error fetching topics:', error);\r\n      }\r\n    };\r\n\r\n    fetchTopics();\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className=\"home-page\">\r\n      <h1>Home Page</h1>\r\n      <div className=\"topic-container\">\r\n        {topics.map((topic, index) => (\r\n          <div\r\n            key={index}\r\n            className={`topic ${index % 2 === 0 ? 'flashing' : ''}`}\r\n          >\r\n            {topic.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <a href=\"https://quiz.yourdomain.com\" className=\"start-quiz-link\">\r\n          Start Quiz\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","// Quiz.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios'; // For making HTTP requests\r\nimport './Quiz.css'\r\n\r\n\r\nconst Quiz = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [lock, setLock] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [result, setResult] = useState(false);\r\n\r\n  const Option1 = useRef(null);\r\n  const Option2 = useRef(null);\r\n  const Option3 = useRef(null);\r\n  const Option4 = useRef(null);\r\n\r\n  const optionArray = [Option1, Option2, Option3, Option4];\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get('/api/questions', {\r\n          params: { limit: 5 }\r\n        });\r\n        setQuestions(response.data);\r\n      } catch (error) {\r\n        console.log('Error fetching questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  console.log(currentQuestion)\r\n\r\n  if (!currentQuestion) {\r\n    return <div>No Questions available...</div>;\r\n  }\r\n\r\n\r\n  const checkAns = (e, currect_ans) => {\r\n    if (!lock) {\r\n      const correctOption = currentQuestion.currect_ans === 'a' ? 1 :\r\n                            currentQuestion.currect_ans === 'b' ? 2 :\r\n                            currentQuestion.currect_ans === 'c' ? 3 :\r\n                            4;\r\n      if (correctOption === currect_ans) {\r\n        e.target.classList.add(\"correct\");\r\n        setLock(true);\r\n        setScore(prev => prev + 1);\r\n      } else {\r\n        e.target.classList.add(\"wrong\");\r\n        setLock(true);\r\n        optionArray[correctOption - 1].current.classList.add(\"correct\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const next = () => {\r\n    if (lock) {\r\n      if (currentQuestionIndex === questions.length - 1) {\r\n        setResult(true);\r\n        return;\r\n      }\r\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\r\n      setLock(false);\r\n      optionArray.forEach(option => {\r\n        option.current.classList.remove(\"wrong\");\r\n        option.current.classList.remove(\"correct\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get('/api/questions');\r\n        setQuestions(response.data);\r\n        setCurrentQuestionIndex(0);\r\n        setScore(0);\r\n        setLock(false);\r\n        setResult(false);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1 style={{ textAlign: 'center' }}>Quiz</h1>\r\n      <hr />\r\n      {result ? (\r\n        <>\r\n          <h2>You Scored {score} out of {questions.length}</h2>\r\n          <button onClick={reset}>Reset</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>{currentQuestionIndex + 1}. {currentQuestion.title}</h2>\r\n          <ul>\r\n            <li ref={Option1} onClick={(e) => checkAns(e, 1)}>{currentQuestion.option_1}</li>\r\n            <li ref={Option2} onClick={(e) => checkAns(e, 2)}>{currentQuestion.option_2}</li>\r\n            <li ref={Option3} onClick={(e) => checkAns(e, 3)}>{currentQuestion.option_3}</li>\r\n            <li ref={Option4} onClick={(e) => checkAns(e, 4)}>{currentQuestion.option_4}</li>\r\n          </ul>\r\n          <button onClick={next}>Next</button>\r\n          <div className=\"index\">{currentQuestionIndex + 1} of {questions.length} questions</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Home from './Components/Home/Home';\r\nimport Quiz from './Components/Quiz/Quiz'\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/quiz\" element={<Quiz />} />\r\n      </Routes>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App'; // Ensure the path to your App component is correct\r\nimport './Components/Quiz/Quiz.css'\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}